# Copyright 2023 TikTok Pte. Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

macro(network_find_dependency dep)
    find_dependency(${dep})
    if(NOT ${dep}_FOUND)
        if(NOT PETAce-Network_FIND_QUIETLY)
            message(WARNING "Could not find dependency `${dep}` required by this configuration")
        endif()
        set(PETAce-Network_FOUND FALSE)
        return()
    endif()
endmacro()

set(PETAce-Network_FOUND FALSE)
set(PETAce-Network_STATIC_FOUND FALSE)
set(PETAce-Network_SHARED_FOUND FALSE)

set(NETWORK_DEBUG @NETWORK_DEBUG@)

# Add the current directory to the module search path
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
set(THREADS_PREFER_PTHREAD_FLAG TRUE)
network_find_dependency(Threads)

include(${CMAKE_CURRENT_LIST_DIR}/PETAce-NetworkTargets.cmake)

if(TARGET PETAce-Network::network)
    set(PETAce-Network_FOUND TRUE)
    set(PETAce-Network_STATIC_FOUND TRUE)
endif()

if(TARGET PETAce-Network::network_shared)
    set(PETAce-Network_FOUND TRUE)
    set(PETAce-Network_SHARED_FOUND TRUE)
endif()

if(PETAce-Network_FOUND)
    if(NOT PETAce-Network_FIND_QUIETLY)
        message(STATUS "PETAce-Network -> Version ${PETAce-Network_VERSION} detected")
    endif()
    if(NETWORK_DEBUG AND NOT PETAce-Network_FIND_QUIETLY)
        message(STATUS "Performance warning: PETAce-Network compiled in debug mode")
    endif()
    set(PETAce-Network_TARGETS_AVAILABLE "PETAce-Network -> Targets available:")

    if(PETAce-Network_STATIC_FOUND)
        string(APPEND PETAce-Network_TARGETS_AVAILABLE " PETAce-Network::network")
    endif()
    if(PETAce-Network_SHARED_FOUND)
        string(APPEND PETAce-Network_TARGETS_AVAILABLE " PETAce-Network::network_shared")
    endif()
    if(NOT PETAce-Network_FIND_QUIETLY)
        message(STATUS ${PETAce-Network_TARGETS_AVAILABLE})
    endif()
else()
    if(NOT PETAce-Network_FIND_QUIETLY)
        message(STATUS "PETAce-Network -> NOT FOUND")
    endif()
endif()
